plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'jacoco'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.architecturepractice"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "com.example.architecturepractice.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }

    buildFeatures{
        viewBinding = true
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

jacoco {
    toolVersion = '0.8.7'
    reportsDir = file("${buildDir}/reports")
}

task coverageReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    def javaClassDirPath = "$project.buildDir/intermediates/javac/debug/classes"
    def kotlinClassDirPath = "$project.buildDir/tmp/kotlin-classes/debug"
    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*InjectAdapter*.*',
                      '**/*StaticInjection*.*',
                      '**/*ModuleAdapter*.*',
                      '**/*_Provide*/**',
                      '**/*_Factory*/**',
                      '**/*_MemberInjector.class',
                      '**/*Dagger*',
                      '**/Manifest*.*',
                      'com/example/architecturepractice/di',
                      'com/example/architecturepractice/databinding',
                      'com/android/**/*.class']

    group = "Reporting"
    description = "Generate Jacoco coverage reports"

    def coverageSourceDirs = ['src/main/java']

    classDirectories.from = fileTree(
            dir: javaClassDirPath,
            excludes: fileFilter
    ) + fileTree(
            dir: kotlinClassDirPath,
            excludes: fileFilter
    )

    sourceDirectories.from = files(coverageSourceDirs, "src/main/kotlin")
    executionData.from = files("${buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        html.enabled = true
        xml.enabled = true
    }
}

dependencies {
    // firebase
    implementation platform('com.google.firebase:firebase-bom:28.2.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.firebaseui:firebase-ui-auth:7.2.0'

    // viewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // livedata
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'

    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'

    // fragment
    implementation 'androidx.fragment:fragment-ktx:1.3.6'

    // Room
    implementation 'androidx.room:room-runtime:2.3.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    kapt 'androidx.room:room-compiler:2.3.0'
    implementation 'androidx.room:room-ktx:2.3.0'

    // Google Calendar API
    implementation 'androidx.media:media:1.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'pub.devrel:easypermissions:0.3.0'
    implementation('com.google.api-client:google-api-client-android:1.23.0') {
        exclude group: 'org.apache.httpcomponents'
    }
    implementation('com.google.apis:google-api-services-calendar:v3-rev235-1.22.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    // gson
    implementation 'com.google.code.gson:gson:2.8.5'

    // dagger
    implementation 'com.google.dagger:dagger-android:2.38.1'
    kapt 'com.google.dagger:dagger-compiler:2.38.1'
    implementation 'com.google.dagger:dagger-android-support:2.38.1'
    kapt 'com.google.dagger:dagger-android-processor:2.34.1'

    // test
    testImplementation 'org.mockito:mockito-core:3.4.0'
    testImplementation 'org.mockito:mockito-inline:3.4.0'

    testImplementation 'org.robolectric:robolectric:4.0.2'

    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation "androidx.test:rules:1.4.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "androidx.test:core-ktx:1.4.0"
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'

    kaptTest "com.google.dagger:dagger-compiler:2.38.1"
    kaptAndroidTest "com.google.dagger:dagger-compiler:2.38.1"
    androidTestImplementation "com.google.dagger:dagger:2.38.1"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
